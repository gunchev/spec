##############################################################################
# This .spec file is dual licensed. It can be distributed either with the    #
# terms of GPL version 2 or newer, or with the MIT license included below.   #
# Removing either GPL or MIT license when distributing this file is allowed. #
##############################################################################
# - start of MIT license -
# Copyright (c) 2007-2009 Anssi Hannula, Luiz Fernando Capitulino, Colin Guthrie, Thomas Backlund
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
# - end of MIT license -
%define kversion %(uname -r)
%undefine _missing_build_ids_terminate_build
%define debug_package %{nil}
%define __spec_install_post %{nil}
%define name		fglrx

# NOTE: These version definitions are overridden by ati-packager.sh when
# building with the --buildpkg method of the installer.

# When updating, please add new ids to ldetect-lst (merge2pcitable.pl).

# version in installer filename:
%define oversion	14.501.1003
# Advertised version, for description:
%define mversion	14.12
# release:
%define rel		1%{?dist}.bin

# Best-effort if AMD has made late changes (in amdbuild mode)
%define _default_patch_fuzz 2

%define priority	1000
%define release %{rel}

# set to 1 for a prerelease driver with an ubuntu tarball as source
%define ubuntu_prerelease 0

%define driverpkgname	xorg-x11-drv-fglrx
%define drivername	fglrx
%define xorg_version	pic
# highest supported videodrv abi
%define videodrv_abi	17
%define xorg_libdir	%{_libdir}/xorg
%define xorg_dridir	%{_libdir}/dri
%define ld_so_conf_file	ati.conf
%define ati_extdir	%{_libdir}/%{drivername}/xorg
%define xorg_extra_modules	%{_libdir}/xorg/extra-modules
%define bundle_qt	0

# ##ldetect_cards_name
# The entry in Cards+ this driver should be associated with in case there is
# no entry in ldetect-lst default pcitable. A ldetect-lst pcitable.d file
# will be generated by this .spec that matches cards supported by this driver
# to the specified ldetect CARD name. If %nil, no file will be generated.

# cooker ldetect-lst should be up-to-date
%define ldetect_cards_name      %nil

# For manual backports, create pcitable.d:
#%if %{mgaversion} <= 2
#%define ldetect_cards_name	ATI Radeon HD 2000 and later without free driver (vesa/fglrx)
#%endif
#%if %{mgaversion} <= 1
#%define ldetect_cards_name	ATI Radeon HD 2000 and later (vesa/fglrx)
#%endif

%ifarch %ix86
%define xverdir		x%{xorg_version}
%define archdir		arch/x86
%endif
%ifarch x86_64
%define xverdir		x%{xorg_version}_64a
%define archdir		arch/x86_64
%endif

# Other packages should not require any AMD specific proprietary libraries
# (if that is really necessary, we may want to split that specific lib out),
# and this package should not be pulled in when libGL.so.1 is required.
%define _provides_exceptions \\.so

%define qt_requires_exceptions %nil
%if %{bundle_qt}
# do not require Qt if it is bundled
%define qt_requires_exceptions \\|libQtCore\\.so\\|libQtGui\\.so
%endif

# do not require fglrx stuff, they are all included
%define common_requires_exceptions libfglrx.\\+\\.so\\|libati.\\+\\.so\\|libOpenCL\\.so%{qt_requires_exceptions}

%ifarch x86_64
# (anssi) Allow installing of 64-bit package if the runtime dependencies
# of 32-bit libraries are not satisfied. If a 32-bit package that requires
# libGL.so.1 is installed, the 32-bit mesa libs are pulled in and that will
# pull the dependencies of 32-bit fglrx libraries in as well.
%define _requires_exceptions %common_requires_exceptions\\|lib.*so\\.[^(]\\+\\(([^)]\\+)\\)\\?$
%else
%define _requires_exceptions %common_requires_exceptions
%endif

# (anssi) Do not require qt for amdnotifyui (used as event notifier, as
# of 04/2010 only for DisplayPort failures). installing
# fglrx-control-center will satisfy the dependency.
# It is not moved to fglrx-control-center as due to its small size it may
# be wanted on e.g. KDE Ones, which can't have the full fglrx-control-center,
# and due to it having nothing to do with fglrx-control-center.
%define _exclude_files_from_autoreq ^%{_sbindir}/amdnotifyui$

Summary:	AMD proprietary X.org driver and libraries
Name:		%{name}
Version:	%{oversion}
Release:	%{release}
Source0:	amd-driver-installer-%{oversion}-x86.x86_64.run
Source1:	ati-packager.sh
Source2:	atieventsd.init
Source10:	generate-fglrx-spec-from-svn.sh
Patch3:		fglrx-authfile-locations.patch
Patch9:		fglrx-make_sh-custom-kernel-dir.patch
# do not probe /proc for kernel info as we may be building for a
# different kernel
Patch10:	fglrx-make_sh-no-proc-probe.patch
# (tmb) fix GL mess
Patch11:	fglrx-fix-GL-redefines.patch
# (aur) fix build with 3.14
Patch12:	cold-fglrx-3.14-current_euid.patch

License:	Freeware
URL:		http://ati.amd.com/support/driver.html
Group:		System/Kernel and hardware
BuildRequires:	mesa-libGL-devel
BuildRequires:	libXmu-devel
BuildRequires:	libXaw-devel
BuildRequires:	libXp-devel
BuildRequires:	libXtst-devel
BuildRequires:	imake
# Used by atieventsd:
#Suggests:	acpid
BuildRequires:	ImageMagick
BuildRequires:  kernel-headers
BuildRequires:  kernel-devel-uname-r

%description
Source package of the AMD proprietary driver. Binary packages are
named xorg-x11-drv-fglrx on %{_vendor}.
This package corresponds to AMD Catalyst version %mversion.

%package -n %{driverpkgname}
Summary:	AMD proprietary X.org driver and libraries
Group:		System/Kernel and hardware
Requires(post):	chkconfig
Requires(postun): chkconfig
Obsoletes:	ati_igp
#Suggests:	%{drivername}-control-center = %{version}
Obsoletes:	ati < %{version}-%{release}
Provides:	ati = %{version}-%{release}
Requires:	fglrx-kmod = %{version}
Requires:	xorg-x11-server-common >= 1.9
Provides:	atieventsd = %{version}-%{release}
Obsoletes:	atieventsd < %{version}-%{release}

%description -n %{driverpkgname}
AMD proprietary X.org graphics driver, related libraries and
configuration tools.

NOTE: You should use XFdrake to configure your AMD card. The
correct packages will be automatically installed and configured.

If you do not want to use XFdrake, see README.manual-setup.

The graphical configuration utility, AMD Catalyst Control Center
Linux Edition, is contained in the package
%{drivername}-control-center.
This package corresponds to AMD Catalyst version %mversion.

%package -n %{drivername}-control-center
Summary:	AMD Catalyst Control Center Linux Edition
Group:		System/Kernel and hardware
Requires:	%{driverpkgname} = %{version}
Obsoletes:	ati-utils < %{version}-%{release}
Provides:	ati-utils = %{version}-%{release}
Provides:	amdcccle = %{version}-%{release}
Obsoletes:	ati-ccc < %{version}-%{release}
Obsoletes:	ati-control-center < %{version}-%{release}
Provides:	ati-control-center = %{version}-%{release}
%if !%{bundle_qt}
Requires:	qt-x11
%endif

%description -n %{drivername}-control-center
AMD Catalyst Control Center Linux Edition, a graphical configuration
utility for the AMD proprietary X.org driver.
This package corresponds to AMD Catalyst version %mversion.

%package -n %{drivername}-kmod
Summary:	AMD proprietary kernel module
Group:		System/Kernel and hardware
Requires:	kernel = %(uname -r|sed 's/-.*//')

%description -n %{drivername}-kmod
AMD proprietary kernel module. This is to be used with the
%{driverpkgname} package.
This package corresponds to AMD Catalyst version %mversion.

%package -n %{drivername}-devel
Summary:	AMD proprietary development libraries and headers
Group:		Development/C
Requires:	%{driverpkgname} = %{version}-%{release}
Obsoletes:	ati-devel < %{version}-%{release}
Provides:	ati-devel = %{version}-%{release}

%description -n %{drivername}-devel
AMD proprietary development libraries and headers. This package is
not required for normal use.

The main driver package name is %{driverpkgname}.

%package -n %{drivername}-opencl
Summary:	OpenCL libraries for the AMD proprietary driver
Group: 		System/Kernel and hardware
Requires:	fglrx-kmod = %{version}
Conflicts:	xorg-x11-drv-fglrx < 8.911-2

%description -n %{drivername}-opencl
OpenCL libraries for the AMD proprietary driver. This package is not
required for normal use, it provides libraries to use AMD cards for High
Performance Computing (HPC).

%prep
%setup -T -c
sh %{SOURCE0} --extract .

mkdir fglrx_tools
tar -xzf common/usr/src/ati/fglrx_sample_source.tgz -C fglrx_tools

cd common # ensure patches do not touch outside
%patch3 -p2
%patch9 -p2
%patch10 -p2
%patch11 -p2
%patch12 -p2
cd ..

cat > README.install.urpmi <<EOF
This driver is for ATI Radeon HD 5000 and newer cards.
Reconfiguring is not necessary when upgrading from a previous %{_vendor} AMD
driver package.

Use XFdrake to configure X to use the correct AMD driver. Any needed
packages will be automatically installed if not already present.
1. Run XFdrake as root.
2. Go to the Graphics Card list.
3. Select your card (it is usually already autoselected).
4. Answer any questions asked and then quit.

If you do not want to use XFdrake or it does not work correctly for
you, see README.manual-setup for manual installation instructions.
EOF

cat > README.manual-setup <<EOF
This file describes the procedure for the manual installation of this AMD
driver package. You can find the instructions for the recommended automatic
installation in the file 'README.install.urpmi' in this directory.

- Open %{_sysconfdir}/X11/xorg.conf and make the following changes:
  o Change the Driver to "fglrx" in the Device section
  o Make the line below the only 'glx' related line in the Module section:
      Load "glx"
  o Remove any 'ModulePath' lines from the Files section
- Run "update-alternatives --set gl_conf %{_sysconfdir}/ld.so.conf.d/GL/%{ld_so_conf_file}" as root.
- Run "ldconfig" as root.
EOF

cat > README.8.980.upgrade.urpmi <<EOF
REMOVED GRAPHICS DRIVER SUPPORT NOTIFICATION:
Versions 8.980 and later of AMD Proprietary Graphics driver (fglrx) only
support Radeon HD 5000 or newer cards.

If you have an older Radeon card or are unsure, please reconfigure your
driver:
1. Run XFdrake as root or select Graphical server configuration in
   %{_vendor} Control Center.
2. Go to the Graphics Card list.
3. Select your card (it is usually already autoselected).
4. Answer any questions asked and then quit.
EOF

%build
cd fglrx_tools/fgl_glxgears
xmkmf
make RMAN=/bin/true CC="%__cc %optflags -I../../common/usr/include" EXTRA_LDOPTIONS="%{?ldflags}"
cd -

# kmod
cp -a %{archdir}/lib/modules/fglrx/build_mod/* common/lib/modules/fglrx/build_mod
cd common/lib/modules/fglrx/build_mod
sed -i '834,848d' kcl_acpi.c
sed -i 's/Proprietary. (C) 2002 - ATI Technologies, Starnberg, GERMANY/GPL/' firegl_public.c
sed -i 's/COMPAT_ALLOC_USER_SPACE/arch_compat_alloc_user_space/' kcl_ioctl.c
make -C 2.6.x

%install
rm -rf %{buildroot}

# kmod
install -Dm644 common/lib/modules/fglrx/build_mod/2.6.x/fglrx.ko %{buildroot}/lib/modules/%{kversion}/kernel/drivers/char/drm/fglrx.ko

# headers
install -d -m755		%{buildroot}%{_includedir}
cp -a common/usr/include/*	%{buildroot}%{_includedir}
chmod 0644 %{buildroot}%{_includedir}/*/*.h

# install binaries
install -d -m755					%{buildroot}%{_sbindir}
install -m755 %{archdir}/usr/sbin/*			%{buildroot}%{_sbindir}
install -m755 common/usr/sbin/*				%{buildroot}%{_sbindir}
install -d -m755					%{buildroot}%{_bindir}
install -m755 %{archdir}/usr/bin/*			%{buildroot}%{_bindir}
install -m755 %{archdir}/usr/X11R6/bin/*		%{buildroot}%{_bindir}
install -m755 common/usr/X11R6/bin/*			%{buildroot}%{_bindir}
install -m755 fglrx_tools/fgl_glxgears/fgl_glxgears	%{buildroot}%{_bindir}
# compatibility symlink
ln -s aticonfig %{buildroot}%{_bindir}/amdconfig

# atieventsd initscript
install -d -m755 %{buildroot}%{_initrddir}
install -m755 %{SOURCE2} %{buildroot}%{_initrddir}/atieventsd

# amdcccle data files
install -d -m755 %{buildroot}%{_datadir}/ati/amdcccle
rm -f amdcccle.langs
for fullname in common/usr/share/ati/amdcccle/*.qm; do
	file=$(basename $fullname)
	lang=${file#*_}
	lang=${lang%%.qm}
%if !%{bundle_qt}
	# qt localization not necessary with non-bundled qt
	[ "$file" = "${file#qt}" ] || continue
%endif
	install -m644 $fullname %{buildroot}%{_datadir}/ati/amdcccle
	echo "%%lang($lang) %{_datadir}/ati/amdcccle/$file" >> amdcccle.langs
done

# amdcccle super-user mode
install -d -m755 %{buildroot}%{_sysconfdir}/security/console.apps
install -d -m755 %{buildroot}%{_sysconfdir}/pam.d
install -m644 common/etc/security/console.apps/* %{buildroot}%{_sysconfdir}/security/console.apps
ln -s su %{buildroot}%{_sysconfdir}/pam.d/amdcccle-su

# man pages
install -d -m755 %{buildroot}%{_mandir}/man1 %{buildroot}%{_mandir}/man8
install -m644 common/usr/share/man/man8/* %{buildroot}%{_mandir}/man8

# menu entry
install -d -m755 %{buildroot}%{_datadir}/applications
install -m644 common/usr/share/applications/* %{buildroot}%{_datadir}/applications
sed -i 's,^Icon=.*$,Icon=%{drivername}-amdcccle,' %{buildroot}%{_datadir}/applications/*.desktop
# control center doesn't really use GNOME/KDE libraries:
sed -i 's,GNOME;KDE;,,' %{buildroot}%{_datadir}/applications/*.desktop

# icons
install -d -m755 %{buildroot}%{_datadir}/pixmaps
install -m644 common/usr/share/icons/ccc_large.xpm %{buildroot}%{_datadir}/pixmaps/%{drivername}-amdcccle.xpm

# install libraries
install -d -m755					%{buildroot}%{_libdir}/%{drivername}
install -m755 %{archdir}/usr/X11R6/%{_lib}/*.*		%{buildroot}%{_libdir}/%{drivername}
install -m755 %{archdir}/usr/X11R6/%{_lib}/fglrx/*	%{buildroot}%{_libdir}/%{drivername}
install -m755 %{archdir}/usr/%{_lib}/*.*		%{buildroot}%{_libdir}/%{drivername}
mv %{buildroot}%{_libdir}/%{drivername}/{fglrx-,}libGL.so.1.2
chmod 0644						%{buildroot}%{_libdir}/%{drivername}/*.a
/sbin/ldconfig -n					%{buildroot}%{_libdir}/%{drivername}
# create devel symlinks
for file in %{buildroot}%{_libdir}/%{drivername}/*.so.*.*; do
	ln -s $(basename $file) ${file%%.so*}.so;
done

%if %{bundle_qt}
# install the bundled Qt4 libs on distros with qt4 < 4.4.2
install -d -m755				%{buildroot}%{_libdir}/%{drivername}-qt4
install -m755 %{archdir}/usr/share/ati/%{_lib}/*	%{buildroot}%{_libdir}/%{drivername}-qt4
# RPATH of amdcccle points to datadir, we create a symlink there:
install -d -m755				%{buildroot}/usr/share/ati
ln -s %{_libdir}/%{drivername}-qt4		%{buildroot}/usr/share/ati/%{_lib}
%endif

# install X.org files
install -d -m755						%{buildroot}%{xorg_libdir}/modules/drivers
install -m755 %{xverdir}/usr/X11R6/%{_lib}/modules/drivers/*.so* %{buildroot}%{xorg_libdir}/modules/drivers
install -d -m755						%{buildroot}%{xorg_libdir}/modules/linux
install -m755 %{xverdir}/usr/X11R6/%{_lib}/modules/linux/*.so*	%{buildroot}%{xorg_libdir}/modules/linux
install -m644 %{xverdir}/usr/X11R6/%{_lib}/modules/*.*o		%{buildroot}%{xorg_libdir}/modules
install -d -m755						%{buildroot}%{ati_extdir}
install -m755 %{xverdir}/usr/X11R6/%{_lib}/modules/extensions/fglrx/*.so* %{buildroot}%{ati_extdir}
mv %{buildroot}%{ati_extdir}/{fglrx-,}libglx.so

# etc files
install -d -m755		%{buildroot}%{_sysconfdir}/ati
install -m644 common/etc/ati/*	%{buildroot}%{_sysconfdir}/ati
chmod 0755			%{buildroot}%{_sysconfdir}/ati/*.sh
# Ghost file created as suggested by AMD.
touch %{buildroot}%{_sysconfdir}/ati/atiapfuser.blb

# dri libraries
install -d -m755						%{buildroot}%{xorg_dridir}
install -m755 %{archdir}/usr/X11R6/%{_lib}/modules/dri/*	%{buildroot}%{xorg_dridir}

# ld.so.conf
install -d -m755			%{buildroot}%{_sysconfdir}/ld.so.conf.d/GL
echo "%{_libdir}/%{drivername}" >	%{buildroot}%{_sysconfdir}/ld.so.conf.d/GL/%{ld_so_conf_file}
touch					%{buildroot}%{_sysconfdir}/ld.so.conf.d/GL.conf

# XvMCConfig
install -d -m755 %{buildroot}%{_sysconfdir}/%{drivername}
echo "libAMDXvBA.so.1" > %{buildroot}%{_sysconfdir}/%{drivername}/XvMCConfig

# OpenCL icd
install -d -m755				%{buildroot}%{_sysconfdir}/OpenCL/vendors
install -m644 %{archdir}/etc/OpenCL/vendors/*	%{buildroot}%{_sysconfdir}/OpenCL/vendors

# PowerXpress intel - use Mesa libGL but still keep AMD specific libs in search path
echo "%{_libdir}/mesa" > %{buildroot}%{_sysconfdir}/%{drivername}/pxpress-free.ld.so.conf
cat %{buildroot}%{_sysconfdir}/ld.so.conf.d/GL/%{ld_so_conf_file} >> %{buildroot}%{_sysconfdir}/%{drivername}/pxpress-free.ld.so.conf

# install ldetect-lst pcitable files for backports
sed -ne 's|^\s*FGL_ASIC_ID(\(0x....\)).*|\1|gp' common/lib/modules/fglrx/build_mod/fglrxko_pci_ids.h | tr '[:upper:]' '[:lower:]' | sort -u | sed 's,^.*$,0x1002\t\0\t"%{ldetect_cards_name}",' > pcitable.fglrx.lst
[ $(stat -c%s pcitable.fglrx.lst) -gt 500 ]
%if "%{ldetect_cards_name}" != ""
install -d -m755 %{buildroot}%{_datadir}/ldetect-lst/pcitable.d
gzip -c pcitable.fglrx.lst > %{buildroot}%{_datadir}/ldetect-lst/pcitable.d/40%{drivername}.lst.gz
%endif

install -d -m755 %{buildroot}%{_datadir}/ati
cat > %{buildroot}%{_datadir}/ati/amd-uninstall.sh <<EOF
#!/bin/bash
# parameters as per AMD: [--force | --dry-run]
dryrun=
while [ -n "\$*" ]; do
	case "\$1" in
	--dryrun)	dryrun="--test" ;;
	--force)	;;
	--preserve)	;;
	--quick)	;;
	--getUninstallVersion) exit 2 ;;
	*)		echo "Unknown option for \$0." >&2 ;;
	esac
	shift
done

# AMD documentation suggests doing rpm -V and use --force to override it,
# but it doesn't make sense with the update-alternatives setup, so we just
# check package presence.
pkgs=
rpm -q --quiet %{driverpkgname}             && pkgs="\$pkgs %{driverpkgname}"
rpm -q --quiet %{drivername}-kmod           && pkgs="\$pkgs %{drivername}-kmod"
rpm -q --quiet %{drivername}-control-center && pkgs="\$pkgs %{drivername}-control-center"
rpm -q --quiet %{drivername}-devel          && pkgs="\$pkgs %{drivername}-devel"
[ -n "\$pkgs" ] || { echo "The AMD proprietary driver is not installed." >&2; exit 1; }
urpme --auto \$dryrun \$pkgs || { echo "Failed to uninstall the AMD proprietary driver." >&2; exit 1; }
[ -n "\$dryrun" ] || echo "The AMD proprietary driver has been uninstalled."
EOF
chmod 0755 %{buildroot}%{_datadir}/ati/amd-uninstall.sh

# PowerXpress (switchable graphics)
# - path hardcoded into driver
install -d -m755 %{buildroot}%{_libdir}/fglrx
cat > %{buildroot}%{_libdir}/fglrx/switchlibGL <<EOF
#!/bin/sh

amd_target="%{_sysconfdir}/ld.so.conf.d/GL/%{ld_so_conf_file}"
intel_target="%{_sysconfdir}/%{drivername}/pxpress-free.ld.so.conf"

case \$1 in
amd)
	update-alternatives --set gl_conf "\$amd_target" >/dev/null
	ldconfig -X
	;;
intel)
	update-alternatives --set gl_conf "\$intel_target" >/dev/null
	ldconfig -X
	;;
query)
	case \$(readlink -f "%{_sysconfdir}/ld.so.conf.d/GL.conf") in
	\$amd_target)
		echo "amd"
		;;
	\$intel_target)
		echo "intel"
		;;
	*)
		echo "unknown"
		;;
	esac
	;;
esac
EOF
chmod 0755 %{buildroot}%{_libdir}/fglrx/switchlibGL

# It is not feasible to configure these separately with the alternatives
# system, so use the same script for both.
# Note: using a symlink here fails as the driver checks go+w without
# dereferencing the symlink.
cp -a %{buildroot}%{_libdir}/fglrx/switchlibGL %{buildroot}%{_libdir}/fglrx/switchlibglx

# unneeded to-be-removed files as per AMD
find %{buildroot} \( -name libSlotMaximizerAg.so -o -name libSlotMaximizerBe.so \) -print -delete
# not installed by AMD and not referenced elsewhere:
find %{buildroot} \( -name libamdsc64.so -o -name libamdsc32.so \) -print -delete

%pre -n %{driverpkgname}
# Handle alternatives-era /etc/ati directory
# It may confuse rpm due to it containing %config files
if [ -L %{_sysconfdir}/ati ]; then
	rm %{_sysconfdir}/ati
fi

%post -n %{driverpkgname}
# Migrate from pre-alternatives files
if [ ! -L %{_datadir}/applications/mandriva-amdcccle.desktop -a -e %{_datadir}/applications/mandriva-amdcccle.desktop ]; then
	rm -f %{_datadir}/applications/mandriva-amdcccle.desktop
fi

%{_sbindir}/update-alternatives \
	--install %{_sysconfdir}/ld.so.conf.d/GL.conf gl_conf %{_sysconfdir}/ld.so.conf.d/GL/%{ld_so_conf_file} %{priority} \
	--slave %{_sysconfdir}/X11/XvMCConfig xvmcconfig %{_sysconfdir}/%{drivername}/XvMCConfig \
	--slave %{_libdir}/libAMDXvBA.cap %{_lib}AMDXvBA_cap %{_libdir}/%{drivername}/libAMDXvBA.cap \
	--slave %{xorg_extra_modules} xorg_extra_modules %{ati_extdir}

# Alternative for PowerXpress intel (switchable graphics)
# This is a separate alternative so that this situation can be differentiated
# from standard intel configuration by tools (e.g. so that radeon driver won't
# be loaded despite fglrx not being configured anymore).
%{_sbindir}/update-alternatives \
	--install %{_sysconfdir}/ld.so.conf.d/GL.conf gl_conf %{_sysconfdir}/%{drivername}/pxpress-free.ld.so.conf 50

if [ "$(readlink -e %{_sysconfdir}/ld.so.conf.d/GL.conf)" = "%{_sysconfdir}/ld.so.conf.d/GL/ati-hd2000.conf" ]; then
	# Switch from the obsolete hd2000 branch:
	%{_sbindir}/update-alternatives --set gl_conf %{_sysconfdir}/ld.so.conf.d/GL/%{ld_so_conf_file}
fi
# When upgrading from alternatives setup, rpm may consider /etc/ati/atiogl.xml
# to exist due to the symlink, even when we remove it in %pre:
if [ -e %{_sysconfdir}/ati/atiogl.xml.rpmnew -a ! -e %{_sysconfdir}/ati/atiogl.xml ]; then
	mv %{_sysconfdir}/ati/atiogl.xml.rpmnew %{_sysconfdir}/ati/atiogl.xml
	echo "Moved %{_sysconfdir}/ati/atiogl.xml.rpmnew back to %{_sysconfdir}/ati/atiogl.xml."
fi

# Call /sbin/ldconfig explicitely due to alternatives
/sbin/ldconfig -X
service  atieventsd restart
%if "%{ldetect_cards_name}" != ""
[ -x %{_sbindir}/update-ldetect-lst ] && %{_sbindir}/update-ldetect-lst || :
%endif

# Ghost file created as suggested by AMD.
touch %{_sysconfdir}/ati/atiapfuser.blb

# Clear driver version numbers from amdpcsdb as suggested by AMD.
# (fixes version display in amdcccle after upgrade)
amdconfig --del-pcs-key=LDC,ReleaseVersion &>/dev/null || :
amdconfig --del-pcs-key=LDC,Catalyst_Version &>/dev/null || :

%posttrans -n %{driverpkgname}
# RPM seems to leave out the active /etc/fglrx* directory, likely due to
# it being confused with the /etc/ati symlink. We have to clean up ourself:
for dir in %{_sysconfdir}/fglrx %{_sysconfdir}/fglrx-hd2000; do
	if [ -d $dir ]; then
		for file in $dir/*; do
			case "$(basename $file)" in
			control | signature | logo_mask.xbm.example | logo.xbm.example)
				# non-config files, rpm would normally remove
				rm $file;;
			authatieventsd.sh | fglrxprofiles.csv | fglrxrc | atiogl.xml)
				# config files, check for modifications
				case "$(stat -c%s $file)" in
				545 | 838 | 2769 | 10224 | 11018)
					rm $file;;
				*)
					echo "Saving $file as %{_sysconfdir}/ati/$(basename $file).rpmsave."
					mv $file %{_sysconfdir}/ati/$(basename $file).rpmsave;;
				esac
				;;
			esac
		done
		[ $(ls -c $dir | wc -l) -eq 0 ] && rm -r $dir
	fi
done
true

%preun -n %{driverpkgname}
service atieventsd stop

%postun -n %{driverpkgname}
if [ ! -f %{_sysconfdir}/ld.so.conf.d/GL/%{ld_so_conf_file} ]; then
  %{_sbindir}/update-alternatives --remove gl_conf %{_sysconfdir}/ld.so.conf.d/GL/%{ld_so_conf_file}
fi
if [ ! -f %{_sysconfdir}/%{drivername}/pxpress-free.ld.so.conf ]; then
  %{_sbindir}/update-alternatives --remove gl_conf %{_sysconfdir}/%{drivername}/pxpress-free.ld.so.conf
fi
# Call /sbin/ldconfig explicitely due to alternatives
/sbin/ldconfig -X
%if "%{ldetect_cards_name}" != ""
[ -x %{_sbindir}/update-ldetect-lst ] && %{_sbindir}/update-ldetect-lst || :
%endif

%pre -n %{drivername}-control-center
# Handle alternatives-era directory,
# it may confuse rpm.
if [ -L %{_datadir}/ati ]; then
	rm %{_datadir}/ati
fi

%post -n %{drivername}-control-center
[ -d %{_datadir}/fglrx ] && rm -r %{_datadir}/fglrx
[ -d %{_datadir}/fglrx-hd2000 ] && rm -r %{_datadir}/fglrx-hd2000
true

%post -n %{drivername}-opencl
# explicit /sbin/ldconfig due to a non-standard library directory
/sbin/ldconfig -X

%post -n %{drivername}-kmod
depmod -a > /dev/null 2>&1 || true

%postun -n %{drivername}-kmod
depmod -a > /dev/null 2>&1 || true

%clean
rm -rf %{buildroot}

%files -n %{driverpkgname}
%defattr(-,root,root)
%doc README.install.urpmi README.manual-setup
%doc README.8.980.upgrade.urpmi
# the documentation files are grossly out of date; the configuration options
# described in configure.html seem to be used by the driver, though, so it is
# packaged, while the other html files are not:
%doc common/usr/share/doc/fglrx/configure.html
%doc common/usr/share/doc/fglrx/LICENSE.TXT

%if "%{ldetect_cards_name}" != ""
%{_datadir}/ldetect-lst/pcitable.d/40%{drivername}.lst.gz
%endif

%ghost %{_sysconfdir}/ld.so.conf.d/GL.conf
%dir %{_sysconfdir}/ld.so.conf.d/GL
%{_sysconfdir}/ld.so.conf.d/GL/ati.conf

%dir %{_sysconfdir}/%{drivername}
%{_sysconfdir}/%{drivername}/XvMCConfig
%{_sysconfdir}/%{drivername}/pxpress-free.ld.so.conf

%dir %{_sysconfdir}/ati
%{_sysconfdir}/ati/control
%{_sysconfdir}/ati/signature
#config(noreplace) %{_sysconfdir}/ati/atiogl.xml
#{_sysconfdir}/ati/atiapfxx.blb
%{_sysconfdir}/ati/logo.xbm.example
%{_sysconfdir}/ati/logo_mask.xbm.example
%config %{_sysconfdir}/ati/authatieventsd.sh
%{_sysconfdir}/ati/amdpcsdb.default
%ghost %{_sysconfdir}/ati/atiapfuser.blb
%{_sysconfdir}/ati/atiapfxx*


%{_initrddir}/atieventsd

%{_sbindir}/atieventsd
%{_sbindir}/amdnotifyui
%{_sbindir}/atigetsysteminfo.sh

%{_bindir}/amdconfig
%{_bindir}/amdupdaterandrconfig
%{_bindir}/amdxdg-su
%{_bindir}/aticonfig
%{_bindir}/atiodcli
%{_bindir}/atiode
%{_bindir}/fgl_glxgears
%{_bindir}/fglrxinfo
%{_bindir}/amd-console-helper

%{xorg_libdir}/modules/drivers/fglrx_drv.so
%{xorg_libdir}/modules/linux/libfglrxdrm.so
%{xorg_libdir}/modules/amdxmm.*o
%{xorg_libdir}/modules/glesx.*o

%dir %{ati_extdir}
%{ati_extdir}/libglx.so

%{xorg_dridir}/fglrx_dri.so

%dir %{_libdir}/%{drivername}
%{_libdir}/%{drivername}/libGL.so.1
%{_libdir}/%{drivername}/libGL.so.1.*
%{_libdir}/%{drivername}/libaticalcl.so
%{_libdir}/%{drivername}/libaticaldd.so
%{_libdir}/%{drivername}/libaticalrt.so
%{_libdir}/%{drivername}/libatiuki.so.1*

%{_libdir}/%{drivername}/libfglrx_dm.so.1*
%{_libdir}/%{drivername}/libatiadlxx.so
%{_libdir}/%{drivername}/libAMDXvBA.cap
%{_libdir}/%{drivername}/libAMDXvBA.so.1*
%{_libdir}/%{drivername}/libXvBAW.so.1*
%{_libdir}/%{drivername}/libamdhsasc*.so

# PowerXpress
%{_libdir}/fglrx/switchlibGL
%{_libdir}/fglrx/switchlibglx

%dir %{_datadir}/ati
%{_datadir}/ati/amd-uninstall.sh

%{_mandir}/man8/atieventsd.8*

%files -n %{drivername}-control-center -f amdcccle.langs
%defattr(-,root,root)
%doc common/usr/share/doc/amdcccle/*
%{_sysconfdir}/security/console.apps/amdcccle-su
%{_sysconfdir}/pam.d/amdcccle-su
%{_bindir}/amdcccle
%dir %{_datadir}/ati
%dir %{_datadir}/ati/amdcccle
%{_datadir}/pixmaps/%{drivername}-amdcccle.xpm
%{_datadir}/applications/amdcccle.desktop
%{_datadir}/applications/amdccclesu.desktop
%if %{bundle_qt}
%dir %{_libdir}/%{drivername}-qt4
%{_libdir}/%{drivername}-qt4/libQtCore.so.4
%{_libdir}/%{drivername}-qt4/libQtGui.so.4
%{_datadir}/ati/%{_lib}
%endif

%files -n %{drivername}-devel
%defattr(-,root,root)
%{_libdir}/%{drivername}/libfglrx_dm.a
%{_libdir}/%{drivername}/libfglrx_dm.so
%{_libdir}/%{drivername}/libAMDXvBA.so
%{_libdir}/%{drivername}/libXvBAW.so
%dir %{_includedir}/GL
%{_includedir}/GL/*ATI.h
%{_includedir}/GL/*ATI.h.orig
%dir %{_includedir}/ATI
%dir %{_includedir}/ATI/GL
%{_includedir}/ATI/GL/*.h
%{_libdir}/%{drivername}/libGL.so
%{_libdir}/%{drivername}/libatiuki.so

%files -n %{drivername}-opencl
%defattr(-,root,root)
%dir %{_sysconfdir}/OpenCL
%dir %{_sysconfdir}/OpenCL/vendors
%{_sysconfdir}/OpenCL/vendors/amdocl*.icd
%{_bindir}/clinfo
%{_libdir}/%{drivername}/libamdocl*.so
%{_libdir}/%{drivername}/libOpenCL.so.1

%files -n %{drivername}-kmod
%defattr(-,root,root)
/lib/modules/%{kversion}/kernel/drivers/char/drm/fglrx.ko

%changelog
* Tue Dec 16 2014 Wei-Lun Chao <bluebat@member.fsf.org> 14.501.1003
- Rebuild

* Mon Jun 09 2014 tv <tv> 14.010.1006-4.mga5
+ Revision: 635267
- try rebuilding for xorg-1.16 (in case of hidden support...)

* Tue May 13 2014 tmb <tmb> 14.010.1006-3.mga5.nonfree
+ Revision: 622568
- rebuild with gcc 4.9

* Sun Apr 27 2014 tmb <tmb> 14.010.1006-2.mga5.nonfree
+ Revision: 618424
- fix build with kernel-3.14 (P12, AUR)

* Sun Apr 27 2014 tmb <tmb> 14.010.1006-1.mga5.nonfree
+ Revision: 618408
- update to 14.10.1006 (Catalyst 14.4)

* Tue Apr 15 2014 tv <tv> 13.350.1005-2.mga5.nonfree
+ Revision: 614325
- rebuild for new xserver

* Tue Feb 04 2014 tmb <tmb> 13.350.1005-1.mga5.nonfree
+ Revision: 582515
- drop merged patches
- update to Catalyst 14.1 beta (xorg 1.15 support)

* Thu Dec 19 2013 tmb <tmb> 13.251-1.mga4.nonfree
+ Revision: 558928
- update to 13.251 (Catalyst 13.12)

* Sun Dec 08 2013 tmb <tmb> 13.250.18-4.mga4.nonfree
+ Revision: 555881
- restore old install path as its hardcoded in service_harddrake, making it break installs (#11932)

* Fri Dec 06 2013 tmb <tmb> 13.250.18-3.mga4.nonfree
+ Revision: 555659
- fix build with new mesa
- rebuild for new mesa
- install dkms module in kernel/drivers/gpu/drm

* Sat Nov 23 2013 tmb <tmb> 13.250.18-2.mga4.nonfree
+ Revision: 552514
- update to Catalyst 13.11 beta 9.4

* Sat Oct 26 2013 tmb <tmb> 13.250.18-1.mga4.nonfree
+ Revision: 547144
- update to 13.25.18 (Catalyst 13.11-beta6)

* Mon Oct 14 2013 tmb <tmb> 13.200.16-1.mga4.nonfree
+ Revision: 496726
- update to 13.11-beta1
- fix build with kernel-3.12

* Wed Aug 21 2013 tmb <tmb> 13.200.11-0.1.mga4.nonfree
+ Revision: 469036
- update to 13.8 beta2

* Sun Aug 11 2013 tmb <tmb> 13.200.5-0.6.mga4.nonfree
+ Revision: 465460
- rebuild with new gcc

* Thu Aug 08 2013 tmb <tmb> 13.200.5-0.5.mga4.nonfree
+ Revision: 464786
- gcc-4.8.2 build

* Thu Aug 08 2013 tmb <tmb> 13.200.5-0.4.mga4.nonfree
+ Revision: 464781
- really apply the /proc/ati fix

* Thu Aug 08 2013 tmb <tmb> 13.200.5-0.3.mga4.nonfree
+ Revision: 464772
- fix /proc/ati permissions (mga #10944)

* Thu Aug 01 2013 tmb <tmb> 13.200.5-0.2.mga4.nonfree
+ Revision: 462366
- new gcc-4.8.2 build

* Thu Aug 01 2013 tmb <tmb> 13.200.5-0.1.mga4.nonfree
+ Revision: 462356
- update to Catalyst 13.8-beta1 (official kernel-3.10 support)

* Thu Aug 01 2013 tmb <tmb> 13.101-0.5.mga4.nonfree
+ Revision: 462264
- force gcc 4.8.2 build

* Thu Aug 01 2013 tmb <tmb> 13.101-0.4.mga4.nonfree
+ Revision: 462232
- test build with gcc-4.8.2

* Mon Jul 15 2013 tmb <tmb> 13.101-0.3.mga4.nonfree
+ Revision: 454774
- fix build with 3.10 series kernels (P11, gentoo)

* Sun Jun 02 2013 tmb <tmb> 13.101-0.2.mga4.nonfree
+ Revision: 434769
- bump videodrv_abi to 14

* Thu May 30 2013 tv <tv> 13.101-0.1.mga4.nonfree
+ Revision: 433345
- new release

* Thu May 30 2013 tv <tv> 12.104-4.mga4.nonfree
+ Revision: 433132
- submit to nonfree/release

* Fri May 24 2013 tv <tv> 12.104-3.mga4.nonfree
+ Revision: 426106
- rebuild with xserver-1.14

* Wed May 15 2013 tmb <tmb> 12.104-2.mga3.nonfree
+ Revision: 413288
- fix atieventsd service so it actually starts
- adapt for kernel efi_enabled interface change
 (ati #741, fixes atleast mga #9887, #10033)

* Wed Apr 24 2013 tmb <tmb> 12.104-1.mga3.nonfree
+ Revision: 411112
- update to 12.104 (catalyst 13.4, official kernel 3.8 support)
- drop obsolete patches (P11-P13)
- update filelists

  + anssi <anssi>
    - Fix mdv reference in .spec comment
    - Add ldetect card name for mga2 backports

* Sun Jan 20 2013 tmb <tmb> 9.012-1.mga3.nonfree
+ Revision: 390158
- update to 9.012 (Catalyst 13.1, official x11-server 1.13 support)

* Thu Jan 10 2013 tmb <tmb> 9.010.8-5.mga3.nonfree
+ Revision: 344786
- fix build with kernel-3.8 (P13, ubuntu)

* Fri Dec 07 2012 tmb <tmb> 9.010.8-4.mga3.nonfree
+ Revision: 327692
- fix build with 3.7 series kernels (P12)

* Fri Dec 07 2012 tmb <tmb> 9.010.8-3.mga3.nonfree
+ Revision: 327677
- fix kernel 3.7 version check (P11)

* Fri Dec 07 2012 tmb <tmb> 9.010.8-2.mga3.nonfree
+ Revision: 327652
- update to 12.11-beta11

* Mon Nov 19 2012 tmb <tmb> 9.010.8-1.mga3.nonfree
+ Revision: 319557
- update to 12.11-beta8

* Wed Oct 31 2012 tmb <tmb> 9.010-1.mga3.nonfree
+ Revision: 311759
- update to 9.01 (catalyst 12.11 beta) for proper x11-server 1.13 support

* Thu Oct 25 2012 tmb <tmb> 9.002-1.mga3.nonfree
+ Revision: 309911
- update to 9.002 (catalyst 12.10)

* Sat Oct 06 2012 tmb <tmb> 9.000-3.mga3.nonfree
+ Revision: 303076
- swith to ubuntu fglrx-9.000 pre-release tarball that actually supports xorg-server 1.13

* Sun Sep 30 2012 tmb <tmb> 9.000-2.mga3.nonfree
+ Revision: 300688
- update to new 9.00 beta released 2012-09-26
- fix ldetect_cards_name to match current ldetect-lst

* Fri Sep 14 2012 tmb <tmb> 9.000-1.mga3.nonfree
+ Revision: 293922
- drop P15 (kernel-3.5 buildfix, merged)
- update to 9.00 (Catalyst 12.9)

* Fri Sep 07 2012 tv <tv> 8.982-2.mga3.nonfree
+ Revision: 289362
- rebuild for new xserver

* Sun Aug 19 2012 tmb <tmb> 8.982-1.mga3.nonfree
+ Revision: 282081
- update to 8.982 (Catalyst 12.8)
- drop merged patches (P13, P14)

* Sat Jul 28 2012 tmb <tmb> 8.980-3.mga3.nonfree
+ Revision: 275085
- fix build with 3.5 series kernels (P15, from Ubuntu)

* Sun Jul 01 2012 tmb <tmb> 8.980-2.mga3.nonfree
+ Revision: 266190
- update to Catalyst 12-6 final

* Wed Jun 06 2012 tmb <tmb> 8.980-1.mga3.nonfree
+ Revision: 256554
- fix filelist
- fix version in readme.upgrade.urpmi
- update README.upgrade.urpmi with changed hw support info
- update to 8.98 (Catalyst 12.6beta)
  * supports x11-server 1.12
  * NOTE! supports only HD5xxx and newer cards
- drop P11, P12 (merged)

  + anssi <anssi>
    - add empty /etc/ati/atiapfuser.blb as per AMD suggestion

* Mon Jun 04 2012 tv <tv> 8.961-6.mga3.nonfree
+ Revision: 253931
- bump release
- bump X11 ABI require

* Sat Jun 02 2012 tmb <tmb> 8.961-5.mga3.nonfree
+ Revision: 253475
- change usage from cpu_possible_map() to for_each_possible_cpu() so it really works with kernel-3.4

* Wed May 30 2012 tv <tv> 8.961-4.mga3.nonfree
+ Revision: 250057
- rebuild for new X.org server

* Mon May 28 2012 tmb <tmb> 8.961-3.mga3.nonfree
+ Revision: 248541
- fix build on i586 (P14)

* Sun May 27 2012 tmb <tmb> 8.961-2.mga3.nonfree
+ Revision: 247581
- fix build with 3.4 series kernels (P13)

* Sat Apr 28 2012 tmb <tmb> 8.961-1.mga2.nonfree
+ Revision: 233865
- update to 8.961 (Catalyst 12-4)

  + anssi <anssi>
    - adapt for mga2 ldetect-lst in amdbuild mode

* Tue Apr 03 2012 tmb <tmb> 8.951-1.mga2.nonfree
+ Revision: 228069
- update to 8.951 (12-3), adds support for Southern Islands (HD7xxx)

* Fri Mar 09 2012 fwang <fwang> 8.950-1.mga2.nonfree
+ Revision: 221873
- new version 12-2

* Thu Mar 01 2012 tmb <tmb> 8.930-2.mga2.nonfree
+ Revision: 216537
- fix build on i586 due to fpu bugfix changes introduced in 3.2.8 (P11)

* Thu Mar 01 2012 tmb <tmb> 8.930-1.mga2.nonfree
+ Revision: 216519
- update to 8.93 (Catalyst 12.1)

* Thu Dec 15 2011 fwang <fwang> 8.920-1.mga2.nonfree
+ Revision: 181998
- new version 8.92

  + anssi <anssi>
    - fix ATI reference in generate-fglrx-spec-from-svn.sh

* Wed Nov 30 2011 anssi <anssi> 8.911-2.mga2.nonfree
+ Revision: 174610
- add fglrx-opencl package for the new OpenCL libraries
- replace ATI references with AMD where appropriate
- add amdconfig symlink for aticonfig as requested by AMD

* Sun Nov 27 2011 tmb <tmb> 8.911-1.mga2.nonfree
+ Revision: 173020
- fix filelists

  + fwang <fwang>
    - new version 8.911

* Fri Nov 04 2011 fwang <fwang> 8.902-1.mga2.nonfree
+ Revision: 162621
- new version 11.10 (8.902)

* Wed Nov 02 2011 fwang <fwang> 8.892-1.mga2.nonfree
+ Revision: 161248
- new version 8.892
- new version 8.881
- fix init script
- new version 8.872

* Sun Jul 17 2011 anssi <anssi> 8.861-2.mga2.nonfree
+ Revision: 125426
- fix DKMS build with kernel 2.6.39+ (fglrx-2.6.39.patch)

* Tue Jun 28 2011 ahmad <ahmad> 8.861-1.mga2.nonfree
+ Revision: 114974
- Update to 11.6 aka 8.861

* Tue May 24 2011 anssi <anssi> 8.850-3.mga1
+ Revision: 100287
- do not use a symlink for PowerXpress ld.so.conf, it causes an error in
  switchlibfoo scripts (reported by Wiliam Souza)
- do not use a symlink for switchlibglx, it causes an error in fglrx driver
  when trying to do a PowerXpress switch (reported by Wiliam Souza)
- provide ATI libraries also in PowerXpress Intel mode, while using Mesa
  libs for libGL
- clear version numbers from configuration database on installation as
  suggested by AMD (fixes incorrect version in amdcccle after upgrade)
- use -X on postun ldconfig call
- remove old comment
- update amd-uninstall.sh script with new options

* Sun May 22 2011 anssi <anssi> 8.850-2.mga1
+ Revision: 100206
- run ldconfig after alternatives call in PowerXpress switcher script

* Fri May 13 2011 anssi <anssi> 8.850-1.mga1
+ Revision: 97724
- new version 11.5 aka 8.85
  o fixes intel/fglrx switching on PowerXpress
  o fixes some cases of suspend not working

* Sat Apr 30 2011 anssi <anssi> 8.841-1.mga1
+ Revision: 93515
- final 8.841 aka 11.4

* Sun Apr 17 2011 anssi <anssi> 8.840-3.mga1
+ Revision: 87413
- disable conflicts on videodrv ABI, as it may cause X server to be
  uninstalled instead
- remove references to removed xgamma
- remove now unneeded modprobe.preload.d and modprobe.d entries
- add simple uninstaller script used by the ati binaries

* Sun Apr 17 2011 anssi <anssi> 8.840-2.mga1
+ Revision: 87386
- remove extra alternatives slave mistakenly left after mga cleanup

* Sun Apr 03 2011 ahmad <ahmad> 8.840-1.mga1
+ Revision: 79916
- update to 8.840 (using an Ubuntu orig.gz)
- drop kernel-2.6.38 patch, not needed

* Sat Apr 02 2011 ahmad <ahmad> 8.831.2-2.mga1
+ Revision: 79802
- add patch to fix building the module with kernel-2.6.38 series

* Sat Apr 02 2011 ahmad <ahmad> 8.831.2-1.mga1
+ Revision: 79744
- update to 8.831.2 aka 11.3
- fglrx_gamma isn't available, so comment out its bits in the spec
- bump videodrv_abi to 10
- change the xserver-abi conflicts back to '+ 1'

* Tue Mar 08 2011 ahmad <ahmad> 8.821-3.mga1
+ Revision: 66360
- since X Server 1.10 ABI is now 10 (upstream jumped from 8 to 10), adapt the
  x11-server ABI conflicts to that case

* Thu Feb 24 2011 ahmad <ahmad> 8.821-2.mga1
+ Revision: 58195
- drop old/unneded scriptlest, obsoletes and conflicts
- imported package fglrx
